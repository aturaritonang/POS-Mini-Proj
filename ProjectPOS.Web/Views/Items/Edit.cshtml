@model MiniProjectPOS.ViewModel.ItemsViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h5>Edit</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.CategoryID, (IEnumerable<SelectListItem>)ViewBag.ListCategory, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <table id="TableVariant">
                @for (int I = 0; I < Model.ItemVarians.Count; I++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(X => X.ItemVarians[I].ID)
                            @Html.EditorFor(X => X.ItemVarians[I].VariantName, new { htmlAttributes = new { @onkeyup = "BindWithInventory(this)", @class = "form-control" } })
                        </td>
                        <td>
                            @Html.EditorFor(X => X.ItemVarians[I].SKU, new { htmlAttributes = new { @class = "form-control" } })
                        </td>
                        <td>
                            @Html.EditorFor(X => X.ItemVarians[I].Price, new { htmlAttributes = new { @class = "form-control" } })
                        </td>
                        <td><button type="button" class="btn btn-del-var btn-danger" onclick="RemoveRow($(this).closest('tr').index())"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button></td>
                    </tr>
                }
            </table>
        </div>

        <button type="button" class="btn btn-add-variant btn-success">Add Variant</button>

        <div class="form-group">
            <table id="TableInventory">
                @for (int I = 0; I < Model.ItemVarians.Count; I++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(X => X.ItemVarians[I].Invents.ID)
                            @Html.EditorFor(X => X.ItemVarians[I].Invents.VariantName, new { htmlAttributes = new { @class = "form-control" } })
                        </td>
                        <td>
                            @Html.EditorFor(X => X.ItemVarians[I].Invents.InStock, new { htmlAttributes = new { @class = "form-control" } })
                        </td>
                        <td>
                            @Html.EditorFor(X => X.ItemVarians[I].Invents.AlertAt, new { htmlAttributes = new { @class = "form-control" } })
                        </td>
                    </tr>
                }
            </table>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-save btn-primary">Save</button>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        var rowCount = $('#TableVariant tr').length;
        if (rowCount == 0) {
            AddVariant();
        }
    });

    function GetItemVariants() {
        $.ajax({
            url: '@Url.Action("ItemVarians", "Items")',
            type: 'get',
            success: function (result) {
                $("#TableVariant").html(result);
            }
        });
    }

    $(".btn-add-variant").click(function () {
        AddVariant();
    });
</script>