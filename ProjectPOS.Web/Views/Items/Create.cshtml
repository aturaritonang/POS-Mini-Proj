@model MiniProjectPOS.ViewModel.ItemsViewModel

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.CategoryID, (IEnumerable<SelectListItem>)ViewBag.ListCategory, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <table id="TableVariant">
            </table>
        </div>

        <button type="button" class="btn btn-add-variant btn-success">Add Variant</button>
        <hr />

        <div class="form-group">
            <table id="TableInventory">
            </table>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            <button id="btn-save-item" type="button" class="btn btn-primary">Save</button>
        </div>

    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        AddVariant();
    });

    function GetItemVariants() {
        $.ajax({
            url: '@Url.Action("ItemVarians", "Items")',
            type: 'get',
            success: function (result) {
                $("#TableVariant").html(result);
            }
        });
    }

    function AddVariant() {
        $.ajax({
            url: '@Url.Action("AddVariant", "Items")',
            type: 'get',
            dataType: 'html',
            success: function (result) {
                $("#TableVariant").append(result);
                initializePage();
            }
        });

        $.ajax({
            url: '@Url.Action("AddInventory", "Items")',
            type: 'get',
            dataType: 'html',
            success: function (result) {
                $("#TableInventory").append(result);
                initializePage();
            }
        });
    }

    $(".btn-add-variant").click(function () {
        AddVariant();
    });


    $("#btn-save-item").click(function () {
        var parent = { ID: null, Name: $("#Name").val(), CategoryID: $("#CategoryID").val(), ItemVarians: null, ItemInvents: null };

        var ListVarians = [];
        var Variant = { ID: null, VariantName: null, SKU: null, Price: null };

        var valInput = "";

        var rowCount = $('#TableVariant tr').length;
        if (rowCount > 0) {
            $.each($("#TableVariant").find("tr"), function (i, val) {
                var varName = $(this).find(":input[name='variant-name']").val();
                var varSKU = $(this).find(":input[name='variant-sku']").val();
                var varPrice = $(this).find(":input[name='variant-price']").val();

                varPrice = parseFloat(Number(varPrice.replace(/[^0-9\.]+/g, "")));
                Variant = { ID: null, VariantName: varName, SKU: varSKU, Price: varPrice };
                ListVarians.push(Variant);
            });
        }

        parent.ItemVarians = ListVarians;

        var ListInvents = [];
        var Invent = { ID: null, InStock: null, AlertAt: null };

        rowCount = $('#TableInventory tr').length;
        if (rowCount > 0) {
            $.each($("#TableInventory").find("tr"), function (i, val) {
                var varInStock = $(this).find(":input[name='invent-instock']").val();
                var varAlertAt = $(this).find(":input[name='invent-alert']").val();
                
                varInStock = parseFloat(Number(varInStock.replace(/[^0-9\.]+/g, "")));
                varAlertAt = parseFloat(Number(varAlertAt.replace(/[^0-9\.]+/g, "")));

                Invent = { ID: null, InStock: varInStock, AlertAt: varAlertAt };
                ListInvents.push(Invent);
            });
        }

        parent.ItemInvents = ListInvents;

        $.ajax({
            url: '@Url.Action("Create", "Items")',
            data: JSON.stringify(parent),
            type: 'post',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                //alert(result);
                //initializePage();
            }
        });

    });

    
</script>