@model MiniProjectPOS.ViewModel.SupplierViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ProvinceID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.ProvinceID, (IEnumerable<SelectListItem>)ViewBag.ProvinceList, "Select Province", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.RegionID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.RegionID, (IEnumerable<SelectListItem>)ViewBag.RegionList, "Select Region", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RegionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DistrictID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.DistrictID, (IEnumerable<SelectListItem>)ViewBag.DistrictList, "Select District", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
}


<script type="text/javascript">
    $(document).ready(function () {
        @*$.ajax({
            url: '@Url.Action("GetRegionByProv", "Json")',
            data: { id: $("#ProvinceID").val() },
            dataType: 'JSON',
            type: 'get',
            success: function (listItem) {
                ResetDropDown(1);
                $.each(listItem, function (index, item) {
                    $("#RegionID").append('<option value="' + item.ID + '">' + item.RegionName + '</option>');
                });
            }
        });*@
    });

    $("#ProvinceID").change(function () {
        $.ajax({
            url: '@Url.Action("GetRegionByProv", "Json")',
            data: { id: $(this).val() },
            dataType: 'JSON',
            type: 'get',
            success: function (listItem) {
                ResetDropDown(1);
                $.each(listItem, function (index, item) {
                    $("#RegionID").append('<option value="' + item.ID + '">' + item.RegionName + '</option>');
                });
            }
        });
    });

    $("#RegionID").change(
        function () {
            $.ajax({
                url: '@Url.Action("GetDistrictByRegion", "Json")',
                data: { id: $(this).val() },
                dataType: 'JSON',
                type: 'get',
                success: function (listItem) {
                    ResetDropDown(2);
                    $.each(listItem, function (index, item) {
                        $("#DistrictID").append('<option value="' + item.ID + '">' + item.DistrictName + '</option>');
                    });
                }
            });
        });

    function ResetDropDown(level) {
        if (level <= 1) {
            $("#RegionID").empty();
            $("#RegionID").append('<option value="">Select Kota</option>');
        }

        if (level <= 2) {
            $("#DistrictID").empty();
            $("#DistrictID").append('<option value="">Select Kecamatan</option>');
        }
    }
</script>